{
  "version": 2,
  "projects": {
    "admin": {
      "root": "apps/admin",
      "sourceRoot": "apps/admin",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/admin",
            "outputPath": "dist/apps/admin"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "admin:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "admin:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "admin:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/admin"],
          "options": {
            "jestConfig": "apps/admin/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/admin/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "admin-e2e": {
      "root": "apps/admin-e2e",
      "sourceRoot": "apps/admin-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/admin-e2e/cypress.json",
            "tsConfig": "apps/admin-e2e/tsconfig.e2e.json",
            "devServerTarget": "admin:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "admin:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/admin-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps/api/src",
      "projectType": "application",
      "targets": {
        "dockerize": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker login -u {args.username} -p {args.password}",
              "docker build -f ./apps/api/Dockerfile . -t hwasurr/project-lc-api:{args.tag}",
              "docker tag hwasurr/project-lc-api:{args.tag} hwasurr/project-lc-api:latest ",
              "docker push hwasurr/project-lc-api:{args.tag}",
              {
                "command": "docker push hwasurr/project-lc-api:latest",
                "forwardAllArgs": false
              }
            ],
            "parallel": false
          }
        },
        "dockerize-dev": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker login -u {args.username} -p {args.password}",
              "docker build -f ./apps/api/Dockerfile . -t hwasurr/project-lc-api-dev:{args.tag}",
              "docker tag hwasurr/project-lc-api-dev:{args.tag} hwasurr/project-lc-api-dev:latest ",
              "docker push hwasurr/project-lc-api-dev:{args.tag}",
              {
                "command": "docker push hwasurr/project-lc-api-dev:latest",
                "forwardAllArgs": false
              }
            ],
            "parallel": false
          }
        },
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": ["apps/api/src/assets"],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/api/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/api"],
          "options": {
            "jestConfig": "apps/api/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "components": {
      "root": "libs/components",
      "sourceRoot": "libs/components/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/components/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/components"],
          "options": {
            "jestConfig": "libs/components/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "firstmall-db": {
      "root": "libs/firstmall-db",
      "sourceRoot": "libs/firstmall-db/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/firstmall-db/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/firstmall-db"],
          "options": {
            "jestConfig": "libs/firstmall-db/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "hooks": {
      "root": "libs/hooks",
      "sourceRoot": "libs/hooks/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/hooks/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/hooks"],
          "options": {
            "jestConfig": "libs/hooks/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "nest-modules": {
      "root": "libs/nest-modules",
      "sourceRoot": "libs/nest-modules/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/nest-modules/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/nest-modules"],
          "options": {
            "jestConfig": "libs/nest-modules/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "overlay": {
      "root": "apps/overlay",
      "sourceRoot": "apps/overlay/src",
      "projectType": "application",
      "targets": {
        "dockerize": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker login -u {args.username} -p {args.password}",
              "docker build -f ./apps/overlay/Dockerfile . -t hwasurr/project-lc-overlay:{args.tag}",
              "docker tag hwasurr/project-lc-overlay:{args.tag} hwasurr/project-lc-overlay:latest ",
              "docker push hwasurr/project-lc-overlay:{args.tag}",
              {
                "command": "docker push hwasurr/project-lc-overlay:latest",
                "forwardAllArgs": false
              }
            ],
            "parallel": false
          }
        },
        "dockerize-dev": {
          "executor": "@nrwl/workspace:run-commands",
          "options": {
            "commands": [
              "docker login -u {args.username} -p {args.password}",
              "docker build -f ./apps/overlay/Dockerfile . -t hwasurr/project-lc-overlay-dev:{args.tag}",
              "docker tag hwasurr/project-lc-overlay-dev:{args.tag} hwasurr/project-lc-overlay-dev:latest ",
              "docker push hwasurr/project-lc-overlay-dev:{args.tag}",
              {
                "command": "docker push hwasurr/project-lc-overlay-dev:latest",
                "forwardAllArgs": false
              }
            ],
            "parallel": false
          }
        },
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/overlay",
            "main": "apps/overlay/src/main.ts",
            "tsConfig": "apps/overlay/tsconfig.app.json",
            "assets": [
              "apps/overlay/src/assets",
              "apps/overlay/src/views",
              "apps/overlay/src/lib"
            ],
            "generatePackageJson": true
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/overlay/src/environments/environment.ts",
                  "with": "apps/overlay/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "overlay:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/overlay/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/overlay"],
          "options": {
            "jestConfig": "apps/overlay/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "overlay-controller": {
      "root": "apps/overlay-controller",
      "sourceRoot": "apps/overlay-controller/src",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/overlay-controller",
            "main": "apps/overlay-controller/src/main.ts",
            "tsConfig": "apps/overlay-controller/tsconfig.app.json",
            "assets": [
              "apps/overlay-controller/src/assets",
              "apps/overlay-controller/src/views",
              "apps/overlay-controller/src/lib"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/overlay-controller/src/environments/environment.ts",
                  "with": "apps/overlay-controller/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "executor": "@nrwl/node:execute",
          "options": {
            "buildTarget": "overlay-controller:build"
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/overlay-controller/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/overlay-controller"],
          "options": {
            "jestConfig": "apps/overlay-controller/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "prisma-orm": {
      "root": "libs/prisma-orm",
      "sourceRoot": "libs/prisma-orm/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/prisma-orm/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/prisma-orm"],
          "options": {
            "jestConfig": "libs/prisma-orm/jest.config.js",
            "passWithNoTests": true
          }
        },
        "prisma-generate": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma generate",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-create-only": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate dev --create-only --preview-feature --schema ./prisma/schema.prisma",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-dev": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate dev --preview-feature --schema ./prisma/schema.prisma",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-reset": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate reset --preview-feature --schema ./prisma/schema.prisma --force",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-deploy": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate deploy --preview-feature --schema ./prisma/schema.prisma",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-status": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate status --preview-feature --schema ./prisma/schema.prisma",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "migrate-rollback": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma migrate resolve --schema ./prisma/schema.prisma --rolled-back {args.target}",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "studio": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma studio --schema ./prisma/schema.prisma",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        },
        "seed": {
          "executor": "@nrwl/workspace:run-commands",
          "outputs": [],
          "options": {
            "commands": [
              {
                "command": "prisma db seed --preview-feature",
                "forwardAllArgs": false
              }
            ],
            "cwd": "libs/prisma-orm"
          }
        }
      }
    },
    "shared-types": {
      "root": "libs/shared-types",
      "sourceRoot": "libs/shared-types/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/shared-types/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/shared-types"],
          "options": {
            "jestConfig": "libs/shared-types/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "stores": {
      "root": "libs/stores",
      "sourceRoot": "libs/stores/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/stores/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/stores"],
          "options": {
            "jestConfig": "libs/stores/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "utils": {
      "root": "libs/utils",
      "sourceRoot": "libs/utils/src",
      "projectType": "library",
      "targets": {
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/utils/**/*.ts"]
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/utils"],
          "options": {
            "jestConfig": "libs/utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "web": {
      "root": "apps/web",
      "sourceRoot": "apps/web",
      "projectType": "application",
      "targets": {
        "build": {
          "executor": "@nrwl/next:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "root": "apps/web",
            "outputPath": "dist/apps/web"
          },
          "configurations": {
            "production": {}
          }
        },
        "serve": {
          "executor": "@nrwl/next:server",
          "options": {
            "buildTarget": "web:build",
            "dev": true
          },
          "configurations": {
            "production": {
              "buildTarget": "web:build:production",
              "dev": false
            }
          }
        },
        "export": {
          "executor": "@nrwl/next:export",
          "options": {
            "buildTarget": "web:build:production"
          }
        },
        "test": {
          "executor": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/web"],
          "options": {
            "jestConfig": "apps/web/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/web/**/*.{ts,tsx,js,jsx}"]
          }
        }
      }
    },
    "web-e2e": {
      "root": "apps/web-e2e",
      "sourceRoot": "apps/web-e2e/src",
      "projectType": "application",
      "targets": {
        "e2e": {
          "executor": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/web-e2e/cypress.json",
            "tsConfig": "apps/web-e2e/tsconfig.e2e.json",
            "devServerTarget": "web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "web:serve:production"
            }
          }
        },
        "lint": {
          "executor": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/web-e2e/**/*.{js,ts}"]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/next"
  },
  "generators": {
    "@nrwl/react": {
      "application": {
        "babel": true
      }
    },
    "@nrwl/next": {
      "application": {
        "style": "css",
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "web"
}
